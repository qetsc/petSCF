
# PSCF
PSCF is developed to perform Parameterized Self-Consistend-Field calculations such as semi-empirical molecular orbital
(MNDO,PM3, etc) or density-functional based tight binding (DFTB) methods for large systems, where all the relevant matrices are sparse.

* Currently only MINDO/3 method is implemented.
* PSCF is based on PyQuante (http://pyquante.sourceforge.net/).
* All matrix operations are based on petsc4py (https://bitbucket.org/petsc/petsc4py/) and slepc4py (https://bitbucket.org/slepc/slepc4py/).
* Not useful for anything right now, stay tuned...
* For more info contact Murat Keceli: keceli at gmail
* Computationally intensive parts are written in C by Hong Zhang and will be contained in SIPs module.

## How to install?
* PSCF is basically a python code build on top of PyQuante, petsc4py and slepc4py.
* If you have these packages installed, you don't need any additional installations.

### PyQuante installation:
* Download the tarball from http://pyquante.sourceforge.net/
* run `python setup.py install`.

### slepc4py installation:
* Requires, petsc, slepc, petsc4py, mpi4py...
* Start from http://www.mcs.anl.gov/petsc/
* Required packages with petsc installation:
  * MUMPS
  * PT-SCOTCH
  * SCALAPACK

### petsc installation on BG/Q
* The following configure options work:
CC=/soft/compilers/wrappers/gcc/mpicc CXX=/soft/compilers/wrappers/gcc/mpicxx FC=/soft/compilers/wrappers/gcc/mpif90 PETSC_ARCH=arch-gccpetsc4py --with-shared-libraries=1 --with-clanguage=c --with-python=1 --with-debugging=0 --download-chaco=0 --download-cmake=0 --download-hypre=0 --download-plapack=0 --download-prometheus=0 --download-mpich=0 --download-fblaslapack=1 --download-scalapack=1 --download-mumps=1 --download-ptscotch=1 --download-spai=0 --download-spooles=0 --download-superlu=0 --download-superlu_dist=0 --download-triangle=0 -COPTFLAGS=" -O3 -g" -CXXOPTFLAGS=" -O3 -g" -FOPTFLAGS=" -O3 -g"
* But it produces a static library (.a) instead of a shared one (.so). One solution is  (suggested by Satish Balay):
cd $PETSC_DIR/$PETSC_ARCH/lib
ar x libpetsc.a
mpicc -shared -Wl,-soname,libpetsc.so -o libpetsc.so *.o
mkdir obj; mv *.o obj
mv libpetsc.a staticlibpetsc.a
Do the same for slepc.

make ex1 CFLAGS="-Wl,-dy -Wl,-rpath,/home/keceli/petsc/arch-gccpetsc4py"
For slepc4py
edit slepc4py/conf/slepcconf.py: look for  BUILDSHAREDLIB, and
coment-out that block of code

## How to run?
* mpirun -n 2 python pscf.py -options_file options.txt
* You can modify options.txt file or add command-line options to override options.txt 
